// *****************************
// * mixin > function
// *****************************

// 参照：http://creator.aainc.co.jp/archives/7447

// RGB→HSB
@function rgb-to-hsb($base-color)
    $r-rgb: red($base-color)
    $g-rgb: green($base-color)
    $b-rgb: blue($base-color)
    $max: max($r-rgb, $g-rgb, $b-rgb)
    $min: min($r-rgb, $g-rgb, $b-rgb)

    $h-hsb: 0
    @if $max == $min
        $h-hsb: 0
    @else if $max == $r-rgb
        $h-hsb: 60 * (($g-rgb - $b-rgb) / ($max - $min))
    @else if $max == $g-rgb
        $h-hsb: 60 * (($b-rgb - $r-rgb) / ($max - $min)) + 120
    @else if $max == $b-rgb
        $h-hsb: 60 * (($r-rgb - $g-rgb) / ($max - $min)) + 240


    $h-hsb: if($h-hsb < 0, $h-hsb + 360, $h-hsb)
    $s-hsb: (($max - $min) / $max) * 100
    $b-hsb: ($max / 255) * 100

    @return $h-hsb, $s-hsb, $b-hsb

// HSB→RGB
@function hsb-to-rgb($h-hsb, $s-hsb, $b-hsb)
    $max: $b-hsb * 255 / 100
    $min: $max - (($s-hsb / 100) * $max)
    $r-rgb: 0
    $g-rgb: 0
    $b-rgb: 0

    @if 0 <= $h-hsb and $h-hsb <= 60
        $r-rgb: $max
        $g-rgb: ($h-hsb / 60) * ($max - $min) + $min
        $b-rgb: $min
    @else if 61 <= $h-hsb and $h-hsb <= 120
        $r-rgb: ((120 - $h-hsb) / 60) * ($max - $min) + $min
        $g-rgb: $max
        $b-rgb: $min
    @else if 121 <= $h-hsb and $h-hsb <= 180
        $r-rgb: $min
        $g-rgb: $max
        $b-rgb: (($h-hsb - 120) / 60) * ($max - $min) + $min
    @else if 181 <= $h-hsb and $h-hsb <= 240
        $r-rgb: $min
        $g-rgb: ((240 - $h-hsb) / 60) * ($max - $min) + $min
        $b-rgb: $max
    @else if 241 <= $h-hsb and $h-hsb <= 300
        $r-rgb: (($h-hsb - 240) / 60) * ($max - $min) + $min
        $g-rgb: $min
        $b-rgb: $max
    @else if 301 <= $h-hsb and $h-hsb <= 360
        $r-rgb: $max
        $g-rgb: $min
        $b-rgb: ((360 - $h-hsb) / 60) * ($max - $min) + $min

    @return rgb($r-rgb, $g-rgb, $b-rgb)


// 色相（H値）変更
@function calc-color-hue($base-color, $num)
    $hsb: rgb-to-hsb($base-color)
    @return hsb-to-rgb(nth($hsb, 1) + $num, nth($hsb, 2), nth($hsb, 3))

// 彩度（S値）変更
@function calc-color-saturation($base-color, $num)
    $hsb: rgb-to-hsb($base-color)
    @return hsb-to-rgb(nth($hsb, 1), nth($hsb, 2) + $num, nth($hsb, 3))

// 明度（B値）変更
@function calc-color-bright($baseColor, $num)
    $hsb: rgb-to-hsb($baseColor)
    @return hsb-to-rgb(nth($hsb, 1), nth($hsb, 2), nth($hsb, 3) + $num)

// RGB→HSL
// http://qiita.com/m-shinozaki/items/06c5327f35fe8cb6d8b2

@function rgb-to-hsl($color)
  //rgbを分解し
  $r: red($color)
  $g: green($color)
  $b: blue($color)

  //最大値と最小値を探す
  $max: max($r, $g, $b)
  $min: min($r, $g, $b)

  $h: 0
  $s: 0
  $l: ($max + $min) / 2//輝度L

  @if($max == $min)
    //最大と最小が同じ（=rgb３つとも同じ値）なら色相・彩度は0
    $h: 0
    $s: 0

  @else

    //色相H(度): 赤・緑・青がそれぞれ最大の場合の色相
    @if($max == $r)
        $h : 60 * (($g - $b) / ($max - $min))
    @if($max == $g)
        $h : 60 * (($b - $r) / ($max - $min)) + 120
    @if($max == $b)
        $h : 60 * (($r - $g) / ($max - $min)) + 240

    //彩度S(%)
    @if($l < 127)
      //収束値が127以下の時の彩度
      $s: ($max - $min) / ($max + $min)

    @else
      //収束値が128以上の時の彩度
      $s: ($max - $min) / (510 - $max - $min)



  // 色相がマイナス値になってたら360足して0-360の範囲にする
  @if($h < 0)
    $h: $h + 360


  @return $h, $s * 100, $l / 255 * 100

